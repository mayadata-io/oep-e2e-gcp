#!/bin/bash

set -ex

job_id=$(echo $CI_JOB_ID)
job_name=$(echo $CI_JOB_NAME)
gittoken=$(echo "$github_token")
current_time=$(date)
branch_name=$CI_COMMIT_REF_NAME

######################
##   Prerequisites  ##
######################

path=$(pwd)
# Copy kubeconfig
mkdir ~/.kube
cp  $path/.gcp/config ~/.kube/config

kubectl get po -n openebs

####################################
##  Sequencing and Running test   ##
####################################

bash utils/e2e-cr jobname:openebs-install-check jobphase:Waiting
bash utils/e2e-cr jobname:openebs-install-check jobphase:Running
bash utils/e2e-cr jobname:openebs-control-plane-test jobphase:Waiting
bash utils/e2e-cr jobname:openebs-data-plane-test jobphase:Waiting
bash utils/e2e-cr jobname:openebs-reinstallation-test jobphase:Waiting
bash utils/e2e-cr jobname:openebs-resource-limit-installation jobphase:Waiting

# Cloning oep-e2e repository which contains all the test scripts
git clone https://$username:$password@github.com/mayadata-io/oep-e2e.git
cd oep-e2e

####################################
##  Sequencing and Running test   ##
####################################

kubectl create -f litmus/director/tcid-iuoi02-openebs-install/run_litmus_test.yml
kubectl get pods -n litmus

test_name=openebs-install
stage=9-openebs-install-check
test_desc="OpenEBS install check"
echo $test_name
litmus_pod=$(kubectl get po -n litmus | grep $test_name  | awk {'print $1'} | tail -n 1)
echo $litmus_pod

job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)

while [[ "$job_status" != "Completed" ]]
do 
    job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
    sleep 6
done

kubectl logs -f $litmus_pod -n litmus
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
echo $testResult

# Including Python script here.
# This python script will update the readme.md file in the oep-e2e repo
# This script will only execute when pipeline triggered from master. 
if [[ $branch_name == "master" ]]; then
   python3 utils/result_update.py --job_id $job_id --stage $stage --test_desc "$test_desc" --test_result $testResult --time_stamp "$current_time" --token $gittoken --test_name $test_name --job_name $job_name
fi

if [ "$testResult" != Pass ]
then 
    exit 1;
else
    bash utils/e2e-cr jobname:openebs-install-check jobphase:Completed
fi 